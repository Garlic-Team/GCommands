'use strict'; Object.defineProperty(exports,'__esModule',{ value: true }); exports.Command = void 0; var _defaults = require('../typings/defaults'); var _GError = require('./GError'); class Command {constructor(client,options) { options = Object.assign(_defaults.CommandOptionsDefaults,options); this.client = client; this.name = options.name; this.contextMenuName = options.contextMenuName; this.description = options.description; this.type = options.type; this.cooldown = options.cooldown; this.args = options.args; this.alwaysObtain = options.alwaysObtain; this.clientRequiredPermissions = options.clientRequiredPermissions; this.userRequiredPermissions = options.userRequiredPermissions; this.userRequiredRoles = options.userRequiredRoles; this.userOnly = options.userOnly; this.channelTypeOnly = options.channelTypeOnly; this.allowDm = options.allowDm; this.guildOnly = options.guildOnly; this.nsfw = options.nsfw; this.aliases = options.aliases; this.category = options.category; this.usage = options.usage; }run() { throw new _GError.GError('[COMMAND]',`Command ${this.name} doesn't provide a run method!`); } async reload() { const cmdPath = this.client.commands.get(this.name)._path; delete require.cache[require.resolve(cmdPath)]; this.client.commands.delete(this.name); let newCommand = await require(cmdPath); newCommand = new newCommand(this.client); newCommand._path = cmdPath; this.client.commands.set(newCommand.name,newCommand); return true; }}exports.Command = Command;
